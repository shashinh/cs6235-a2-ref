public class jdk.internal.util.xml.impl.ReaderUTF8 extends java.io.Reader
{
    private java.io.InputStream is;

    public void <init>(java.io.InputStream)
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.InputStream r1;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is> = r1;

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.UnsupportedEncodingException $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i21, i23, i24, $i25, $i27;
        char $c13, $c20, $c22;
        char[] r3;
        java.io.InputStream $r1, $r4, $r5, $r6;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        r3 := @parameter0: char[];

        i23 := @parameter1: int;

        i0 := @parameter2: int;

        i24 = 0;

     label01:
        if i24 >= i0 goto label10;

        $r1 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i1 >= 0 goto label04;

        if i24 == 0 goto label02;

        $i25 = i24;

        goto label03;

     label02:
        $i27 = (int) -1;

        $i25 = $i27;

     label03:
        return $i25;

     label04:
        $i2 = $i1 & 240;

        lookupswitch($i2)
        {
            case 192: goto label05;
            case 208: goto label05;
            case 224: goto label06;
            case 240: goto label07;
            default: goto label08;
        };

     label05:
        $i14 = i23;

        i23 = i23 + 1;

        $i15 = $i1 & 31;

        $i16 = $i15 << 6;

        $r6 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i17 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        $i18 = $i17 & 63;

        $i19 = $i16 | $i18;

        $c20 = (char) $i19;

        r3[$i14] = $c20;

        goto label09;

     label06:
        $i3 = i23;

        i23 = i23 + 1;

        $i4 = $i1 & 15;

        $i5 = $i4 << 12;

        $r4 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i6 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        $i7 = $i6 & 63;

        $i8 = $i7 << 6;

        $i9 = $i5 | $i8;

        $r5 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i10 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $i11 = $i10 & 63;

        $i12 = $i9 | $i11;

        $c13 = (char) $i12;

        r3[$i3] = $c13;

        goto label09;

     label07:
        $r7 = new java.io.UnsupportedEncodingException;

        specialinvoke $r7.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>("UTF-32 (or UCS-4) encoding not supported.");

        throw $r7;

     label08:
        $i21 = i23;

        i23 = i23 + 1;

        $c22 = (char) $i1;

        r3[$i21] = $c22;

     label09:
        i24 = i24 + 1;

        goto label01;

     label10:
        return i24;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i16;
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.UnsupportedEncodingException $r6;
        java.io.InputStream $r1, $r3, $r4, $r5;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        $r1 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        i14 = $i0;

        if $i0 >= 0 goto label1;

        $i16 = (int) -1;

        return $i16;

     label1:
        $i1 = $i0 & 240;

        lookupswitch($i1)
        {
            case 192: goto label2;
            case 208: goto label2;
            case 224: goto label3;
            case 240: goto label4;
            default: goto label5;
        };

     label2:
        $i10 = $i0 & 31;

        $i11 = $i10 << 6;

        $r5 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i12 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $i13 = $i12 & 63;

        i14 = $i11 | $i13;

        goto label5;

     label3:
        $i2 = $i0 & 15;

        $i3 = $i2 << 12;

        $r3 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i4 = virtualinvoke $r3.<java.io.InputStream: int read()>();

        $i5 = $i4 & 63;

        $i6 = $i5 << 6;

        $i7 = $i3 | $i6;

        $r4 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        $i8 = virtualinvoke $r4.<java.io.InputStream: int read()>();

        $i9 = $i8 & 63;

        i14 = $i7 | $i9;

        goto label5;

     label4:
        $r6 = new java.io.UnsupportedEncodingException;

        specialinvoke $r6.<java.io.UnsupportedEncodingException: void <init>()>();

        throw $r6;

     label5:
        return i14;
    }

    public void close() throws java.io.IOException
    {
        jdk.internal.util.xml.impl.ReaderUTF8 r0;
        java.io.InputStream $r1;

        r0 := @this: jdk.internal.util.xml.impl.ReaderUTF8;

        $r1 = r0.<jdk.internal.util.xml.impl.ReaderUTF8: java.io.InputStream is>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
}
