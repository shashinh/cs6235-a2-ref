public class jdk.internal.util.xml.impl.XMLWriter extends java.lang.Object
{
    private java.io.Writer _writer;
    private java.nio.charset.CharsetEncoder _encoder;

    public void <init>(java.io.OutputStream, java.lang.String, java.nio.charset.Charset) throws jdk.internal.util.xml.XMLStreamException
    {
        java.io.OutputStream r3;
        jdk.internal.util.xml.XMLStreamException $r7;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.nio.charset.Charset r1;
        java.nio.charset.CharsetEncoder $r2;
        java.io.Writer $r5;
        java.lang.String r4;
        java.io.UnsupportedEncodingException $r6;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        r3 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: java.nio.charset.Charset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.util.xml.impl.XMLWriter: java.nio.charset.CharsetEncoder _encoder> = null;

        $r2 = virtualinvoke r1.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();

        r0.<jdk.internal.util.xml.impl.XMLWriter: java.nio.charset.CharsetEncoder _encoder> = $r2;

     label1:
        $r5 = specialinvoke r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer getWriter(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)>(r3, r4, r1);

        r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r7.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public boolean canEncode(char)
    {
        java.nio.charset.CharsetEncoder $r1, $r2;
        jdk.internal.util.xml.impl.XMLWriter r0;
        char c0;
        boolean $z0;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        c0 := @parameter0: char;

        $r1 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.nio.charset.CharsetEncoder _encoder>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.nio.charset.CharsetEncoder _encoder>;

        $z0 = virtualinvoke $r2.<java.nio.charset.CharsetEncoder: boolean canEncode(char)>(c0);

        return $z0;
    }

    public void write(java.lang.String) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r5;
        java.io.Writer $r2;
        char[] $r3;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r4;
        java.lang.String r1;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        $r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r2.<java.io.Writer: void write(char[])>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r5.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("I/O error", $r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(java.lang.String, int, int) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r4;
        int i0, i1;
        java.io.Writer $r2;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r3;
        java.lang.String r1;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String,int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r4.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("I/O error", $r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void write(char[], int, int) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r4;
        int i0, i1;
        java.io.Writer $r2;
        char[] r1;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r3;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r2 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void write(char[],int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r4.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("I/O error", $r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void write(int) throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r3;
        int i0;
        java.io.Writer $r1;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

        i0 := @parameter0: int;

     label1:
        $r1 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(i0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r3.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("I/O error", $r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void flush() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r3;
        java.io.Writer $r1;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

     label1:
        $r1 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r3.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void close() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r3;
        java.io.Writer $r1;
        jdk.internal.util.xml.impl.XMLWriter r0;
        java.io.IOException $r2;

        r0 := @this: jdk.internal.util.xml.impl.XMLWriter;

     label1:
        $r1 = r0.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r3.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void nl() throws jdk.internal.util.xml.XMLStreamException
    {
        jdk.internal.util.xml.XMLStreamException $r4;
        java.io.Writer $r2;
        jdk.internal.util.xml.impl.XMLWriter r1;
        java.io.IOException $r3;
        java.lang.String $r0;

        r1 := @this: jdk.internal.util.xml.impl.XMLWriter;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

     label1:
        $r2 = r1.<jdk.internal.util.xml.impl.XMLWriter: java.io.Writer _writer>;

        virtualinvoke $r2.<java.io.Writer: void write(java.lang.String)>($r0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new jdk.internal.util.xml.XMLStreamException;

        specialinvoke $r4.<jdk.internal.util.xml.XMLStreamException: void <init>(java.lang.String,java.lang.Throwable)>("I/O error", $r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.io.Writer getWriter(java.io.OutputStream, java.lang.String, java.nio.charset.Charset) throws jdk.internal.util.xml.XMLStreamException, java.io.UnsupportedEncodingException
    {
        java.io.OutputStream r3;
        jdk.internal.util.xml.impl.XMLWriter r7;
        java.io.BufferedOutputStream $r2, $r6;
        java.nio.charset.Charset r0;
        java.io.OutputStreamWriter $r1, $r5;
        java.lang.String r4;

        r7 := @this: jdk.internal.util.xml.impl.XMLWriter;

        r3 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        r0 := @parameter2: java.nio.charset.Charset;

        if r0 == null goto label1;

        $r5 = new java.io.OutputStreamWriter;

        $r6 = new java.io.BufferedOutputStream;

        specialinvoke $r6.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r6, r0);

        return $r5;

     label1:
        $r1 = new java.io.OutputStreamWriter;

        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r3);

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r2, r4);

        return $r1;
    }
}
