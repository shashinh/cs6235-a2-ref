public class jdk.internal.org.objectweb.asm.TypePath extends java.lang.Object
{
    public static final int ARRAY_ELEMENT;
    public static final int INNER_TYPE;
    public static final int WILDCARD_BOUND;
    public static final int TYPE_ARGUMENT;
    byte[] b;
    int offset;

    void <init>(byte[], int)
    {
        int i0;
        byte[] r1;
        jdk.internal.org.objectweb.asm.TypePath r0;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b> = r1;

        r0.<jdk.internal.org.objectweb.asm.TypePath: int offset> = i0;

        return;
    }

    public int getLength()
    {
        byte[] $r1;
        jdk.internal.org.objectweb.asm.TypePath r0;
        byte $b1;
        int $i0, $i2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i0 = r0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $b1 = $r1[$i0];

        $i2 = (int) $b1;

        return $i2;
    }

    public int getStep(int)
    {
        byte[] $r1;
        jdk.internal.org.objectweb.asm.TypePath r0;
        byte $b5;
        int i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i2 = r0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $i1 = 2 * i0;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 1;

        $b5 = $r1[$i4];

        $i6 = (int) $b5;

        return $i6;
    }

    public int getStepArgument(int)
    {
        byte[] $r1;
        jdk.internal.org.objectweb.asm.TypePath r0;
        byte $b5;
        int i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        i0 := @parameter0: int;

        $r1 = r0.<jdk.internal.org.objectweb.asm.TypePath: byte[] b>;

        $i2 = r0.<jdk.internal.org.objectweb.asm.TypePath: int offset>;

        $i1 = 2 * i0;

        $i3 = $i2 + $i1;

        $i4 = $i3 + 2;

        $b5 = $r1[$i4];

        $i6 = (int) $b5;

        return $i6;
    }

    public static jdk.internal.org.objectweb.asm.TypePath fromString(java.lang.String)
    {
        byte[] $r2, $r4;
        jdk.internal.org.objectweb.asm.ByteVector $r5;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5, $i9, $i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        java.lang.String r0;
        jdk.internal.org.objectweb.asm.TypePath $r6;
        char $c6, $c7, $c8;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return null;

     label02:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $r5 = new jdk.internal.org.objectweb.asm.ByteVector;

        specialinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: void <init>(int)>($i1);

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector putByte(int)>(0);

        i11 = 0;

     label03:
        if i11 >= $i1 goto label11;

        $i5 = i11;

        i11 = i11 + 1;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $i13 = (int) $c6;

        if $i13 != 91 goto label04;

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(0, 0);

        goto label10;

     label04:
        $i14 = (int) $c6;

        if $i14 != 46 goto label05;

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(1, 0);

        goto label10;

     label05:
        $i15 = (int) $c6;

        if $i15 != 42 goto label06;

        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(2, 0);

        goto label10;

     label06:
        $i16 = (int) $c6;

        if $i16 < 48 goto label10;

        $i17 = (int) $c6;

        if $i17 > 57 goto label10;

        $i18 = (int) $c6;

        i12 = $i18 - 48;

     label07:
        if i11 >= $i1 goto label08;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i19 = (int) $c8;

        if $i19 < 48 goto label08;

        $i20 = (int) $c8;

        if $i20 > 57 goto label08;

        $i9 = i12 * 10;

        $i21 = (int) $c8;

        $i10 = $i9 + $i21;

        i12 = $i10 - 48;

        i11 = i11 + 1;

        goto label07;

     label08:
        if i11 >= $i1 goto label09;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i22 = (int) $c7;

        if $i22 != 59 goto label09;

        i11 = i11 + 1;

     label09:
        virtualinvoke $r5.<jdk.internal.org.objectweb.asm.ByteVector: jdk.internal.org.objectweb.asm.ByteVector put11(int,int)>(3, i12);

     label10:
        goto label03;

     label11:
        $r2 = $r5.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        $i2 = $r5.<jdk.internal.org.objectweb.asm.ByteVector: int length>;

        $i3 = $i2 / 2;

        $b4 = (byte) $i3;

        $r2[0] = $b4;

        $r6 = new jdk.internal.org.objectweb.asm.TypePath;

        $r4 = $r5.<jdk.internal.org.objectweb.asm.ByteVector: byte[] data>;

        specialinvoke $r6.<jdk.internal.org.objectweb.asm.TypePath: void <init>(byte[],int)>($r4, 0);

        return $r6;
    }

    public java.lang.String toString()
    {
        jdk.internal.org.objectweb.asm.TypePath r0;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2;

        r0 := @this: jdk.internal.org.objectweb.asm.TypePath;

        $i0 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getLength()>();

        $r1 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = 0;

     label1:
        if i4 >= $i0 goto label8;

        $i2 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getStep(int)>(i4);

        tableswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label6;
        };

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label7;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label7;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);

        goto label7;

     label5:
        $i3 = virtualinvoke r0.<jdk.internal.org.objectweb.asm.TypePath: int getStepArgument(int)>(i4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

        goto label7;

     label6:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(95);

     label7:
        i4 = i4 + 1;

        goto label1;

     label8:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <jdk.internal.org.objectweb.asm.TypePath: int TYPE_ARGUMENT> = 3;

        <jdk.internal.org.objectweb.asm.TypePath: int WILDCARD_BOUND> = 2;

        <jdk.internal.org.objectweb.asm.TypePath: int INNER_TYPE> = 1;

        <jdk.internal.org.objectweb.asm.TypePath: int ARRAY_ELEMENT> = 0;

        return;
    }
}
